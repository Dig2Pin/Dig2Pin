import { jsx } from '@emotion/core';
import { FieldContainer, FieldDescription } from '@arch-ui/fields';
import 'react';
import { colors, gridSize } from '@arch-ui/theme';
import { ShieldIcon } from '@arch-ui/icons';
import { P as PrettyData } from './prettyData-e4b86f62.esm.js';
/** @jsx jsx */

const FieldLabel = props => {
  const accessError = (props.errors || []).find(error => error instanceof Error && error.name === 'AccessDeniedError');
  return jsx("span", {
    css: {
      color: colors.N60,
      fontSize: '0.9rem',
      fontWeight: 500,
      paddingBottom: gridSize,
      display: 'flex',
      flexDirection: 'row',
      justifyContent: 'space-between'
    },
    htmlFor: props.htmlFor
  }, props.field.label, accessError ? jsx(ShieldIcon, {
    title: accessError.message,
    css: {
      color: colors.N20,
      marginRight: '1em'
    }
  }) : null);
};

const VirtualField = ({
  field,
  errors,
  value: serverValue
}) => {
  const value = typeof serverValue !== 'undefined' ? serverValue : '';
  const canRead = errors.every(error => !(error instanceof Error && error.name === 'AccessDeniedError'));
  return jsx(FieldContainer, null, jsx(FieldLabel, {
    field: field,
    errors: errors
  }), jsx(FieldDescription, {
    text: field.adminDoc
  }), jsx(PrettyData, {
    data: canRead ? value : undefined
  }));
};

export default VirtualField;
export { FieldLabel };
