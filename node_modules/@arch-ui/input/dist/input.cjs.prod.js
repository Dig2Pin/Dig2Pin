"use strict";

function _interopDefault(ex) {
  return ex && "object" == typeof ex && "default" in ex ? ex.default : ex;
}

Object.defineProperty(exports, "__esModule", {
  value: !0
});

var React = require("react"), React__default = _interopDefault(React), _extends = _interopDefault(require("@babel/runtime/helpers/extends")), core = require("@emotion/core"), _objectWithoutProperties = _interopDefault(require("@babel/runtime/helpers/objectWithoutProperties")), _defineProperty = _interopDefault(require("@babel/runtime/helpers/defineProperty")), common = require("@arch-ui/common"), theme = require("@arch-ui/theme");

const HiddenInput = React.forwardRef((props, ref) => core.jsx("input", _extends({
  ref: ref,
  css: {
    display: "none"
  }
}, props))), AutocompleteCaptor = React.memo((function() {
  return React__default.createElement(React.Fragment, null, React__default.createElement(HiddenInput, {
    autoComplete: "username",
    type: "text",
    tabIndex: -1
  }), React__default.createElement(HiddenInput, {
    autoComplete: "email",
    type: "text",
    tabIndex: -1
  }), React__default.createElement(HiddenInput, {
    autoComplete: "current-password",
    type: "password",
    tabIndex: -1
  }), React__default.createElement(HiddenInput, {
    autoComplete: "new-password",
    type: "password",
    tabIndex: -1
  }));
}), () => !0);

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter((function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    }))), keys.push.apply(keys, symbols);
  }
  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys(Object(source), !0).forEach((function(key) {
      _defineProperty(target, key, source[key]);
    })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach((function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    }));
  }
  return target;
}

const inputStyles = (props = {}) => _objectSpread({}, common.uniformHeight, {
  backgroundColor: props.disabled ? theme.colors.N10 : "white",
  borderColor: theme.colors.N20,
  color: "inherit",
  width: "100%",
  ":hover": {
    borderColor: theme.colors.N30,
    outline: 0
  },
  ":focus": {
    borderColor: theme.colors.primary,
    outline: 0
  },
  "&[disabled]": {
    borderColor: theme.colors.N15,
    backgroundColor: theme.colors.N05
  }
}, props.isMultiline ? {
  lineHeight: "inherit",
  minHeight: 100,
  resize: "vertical",
  whiteSpace: "wrap"
} : void 0), Input = React.forwardRef((props, ref) => {
  const {isMultiline: isMultiline} = props, inputProps = _objectWithoutProperties(props, [ "isMultiline" ]), Component = isMultiline ? "textarea" : "input";
  return core.jsx(Component, _extends({
    ref: ref,
    css: inputStyles(props)
  }, inputProps));
});

exports.AutocompleteCaptor = AutocompleteCaptor, exports.HiddenInput = HiddenInput, 
exports.Input = Input, exports.inputStyles = inputStyles;
