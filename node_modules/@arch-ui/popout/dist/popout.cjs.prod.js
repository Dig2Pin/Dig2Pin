"use strict";

function _interopDefault(ex) {
  return ex && "object" == typeof ex && "default" in ex ? ex.default : ex;
}

Object.defineProperty(exports, "__esModule", {
  value: !0
});

var _defineProperty = _interopDefault(require("@babel/runtime/helpers/defineProperty")), _extends = _interopDefault(require("@babel/runtime/helpers/extends")), _objectWithoutProperties = _interopDefault(require("@babel/runtime/helpers/objectWithoutProperties")), core = require("@emotion/core"), react = require("react"), reactDom = require("react-dom"), theme = require("@arch-ui/theme"), FocusTrap = _interopDefault(require("focus-trap-react")), modalUtils = require("@arch-ui/modal-utils"), reactPopper = require("react-popper");

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter((function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    }))), keys.push.apply(keys, symbols);
  }
  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys(Object(source), !0).forEach((function(key) {
      _defineProperty(target, key, source[key]);
    })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach((function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    }));
  }
  return target;
}

const ARROW_WIDTH = 30, Wrapper = react.forwardRef((_ref, ref) => {
  let {left: left, top: top, width: width} = _ref, props = _objectWithoutProperties(_ref, [ "left", "top", "width" ]);
  return core.jsx("div", _extends({
    ref: ref,
    css: {
      backgroundColor: "white",
      borderRadius: 2 * theme.borderRadius,
      boxShadow: theme.shadows[2],
      marginTop: 2 * theme.gridSize,
      maxHeight: "100%",
      zIndex: 200,
      width: width
    }
  }, props));
}), WrapperInner = react.forwardRef((props, ref) => core.jsx("div", _extends({
  ref: ref,
  css: {
    position: "relative"
  }
}, props))), Arrow = react.forwardRef(({style: style}, ref) => core.jsx("div", {
  ref: ref,
  css: {
    height: 30,
    marginTop: "-11px",
    position: "absolute",
    width: 30
  },
  style: style
}, core.jsx("svg", {
  viewBox: "0 0 30 30",
  style: {
    transform: "rotate(90deg)"
  },
  focusable: "false",
  role: "presentation"
}, core.jsx("path", {
  css: {
    fill: theme.colors.text,
    fillOpacity: .1
  },
  d: "M8.11 6.302c1.015-.936 1.887-2.922 1.887-4.297v26c0-1.378-.868-3.357-1.888-4.297L.925 17.09c-1.237-1.14-1.233-3.034 0-4.17L8.11 6.302z"
}), core.jsx("path", {
  css: {
    fill: "white"
  },
  d: "M8.787 7.036c1.22-1.125 2.21-3.376 2.21-5.03V0v30-2.005c0-1.654-.983-3.9-2.21-5.03l-7.183-6.616c-.81-.746-.802-1.96 0-2.7l7.183-6.614z"
})))), Popout = ({children: children, targetNode: targetNode, contentNode: contentNode, getModalRef: getModalRef, style: style, width: width = 320}) => {
  const [arrowElement, setArrowElement] = react.useState(null), {styles: styles} = reactPopper.usePopper(targetNode, contentNode, {
    placement: "bottom",
    modifiers: [ {
      name: "arrow",
      options: {
        element: arrowElement
      }
    } ]
  }), attachTo = "undefined" != typeof document ? document.body : null;
  return attachTo ? reactDom.createPortal(core.jsx("div", {
    ref: getModalRef,
    style: _objectSpread(_objectSpread({}, styles.popper), {}, {
      zIndex: 2
    })
  }, core.jsx(Wrapper, {
    width: width,
    style: style
  }, core.jsx(FocusTrap, {
    focusTrapOptions: {
      clickOutsideDeactivates: !0
    }
  }, core.jsx(WrapperInner, null, core.jsx(Arrow, {
    ref: setArrowElement,
    style: styles.arrow
  }), children)))), attachTo) : null;
};

var index = modalUtils.withModalHandlers(Popout, {
  transition: modalUtils.springDown
});

exports.default = index;
